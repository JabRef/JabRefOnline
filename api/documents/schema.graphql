scalar DateTime

type FieldValueTuple {
  field: String!
  value: String!
}

input FieldValueTupleInput {
  field: String!
  value: String!
}

"""
Articles, books etc
These *Raw*-types should only be used to sync with JabRef
"""
input DocumentRawInput {
  type: String!
  citationKey: String

  lastModified: DateTime
  added: DateTime

  fields: [FieldValueTupleInput!]
}

input DocumentRawUpdateInput {
  id: ID!
  type: String
  citationKey: String

  lastModified: DateTime
  added: DateTime

  fields: [FieldValueTupleInput!]
}

type DocumentRaw {
  id: ID!

  type: String!
  citationKey: String

  lastModified: DateTime
  added: DateTime

  fields: [FieldValueTuple!]!
}

type Person {
  id: ID!
  name: String!
}

type Organization {
  id: ID!
  name: String!
}

union Entity = Person | Organization

type Journal {
  id: ID!
  name: String!
}

enum DocumentType {
  ARTICLE
}

interface Document {
  id: ID!
  type: DocumentType
  title: String
}

type Article implements Document {
  id: ID!
  type: DocumentType
  title: String

  " The page on which the work starts; for example '135' or 'xiii'."
  pageStart: String
  " The page on which the work ends; for example '138' or 'xvi'."
  pageEnd: String
  " A short description that summarizes the work."
  abstract: String
  " The author of this work."
  author: Entity
  " Keywords or tags used to describe the content."
  keywords: [String]
  journal: Journal
}

type Unknown implements Document {
  id: ID!
  type: DocumentType
  title: String
}

extend type Query {
  getUserDocumentRaw(id: ID!): DocumentRaw
}

extend type Mutation {
  addUserDocumentRaw(document: DocumentRawInput!): DocumentRaw
  updateUserDocumentRaw(document: DocumentRawUpdateInput!): DocumentRaw
}
