scalar EmailAddress

extend type Query {
  """
  Get user by id.
  """
  user(id: ID!): User

  """
  Get the current user.
  """
  me: User
}

extend type Mutation {
  logout: Boolean
  login(email: EmailAddress!, password: String!): User
  signup(email: EmailAddress!, password: String!): User
  forgotPassword(email: EmailAddress!): Boolean
  changePassword(token: String!, id:ID!, newPassword: String!): User

}

type User {
    id: ID!
    email: EmailAddress!

    documentsRaw: [DocumentRaw!]!
    documents: [Document!]!

    groups: [Group!]!
}
