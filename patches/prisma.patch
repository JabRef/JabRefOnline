diff --git a/build/index.js b/build/index.js
index 3fcf846eebf718e0c179cc232fc255b77edeba3e..ecbe9a47b3cfea5a02e21bd71061217cb449b6d6 100644
--- a/build/index.js
+++ b/build/index.js
@@ -2276,12 +2276,7 @@ config.runtimeDataModel = JSON.parse(${JSON.stringify(a)})`}function Wwt(){retur
   getRuntime: async () => await import(${JSON.stringify(l)}),
 
   getQuery${u}WasmModule: async () => {
-    ${Wwt()}
-  
-    // Note: we must use dynamic imports here to avoid bundling errors like \`Module parse failed: Unexpected character '' (1:0)\`.
-    const { readFile } = await dynamicRequireFn('node:fs/promises')
-    ${Vwt(o)}
-    const wasmModulePath = _require.resolve(${JSON.stringify(p)})
+    const wasmModulePath = await import(${JSON.stringify(p)})
     const wasmModuleBytes = await readFile(wasmModulePath)
 
     return new globalThis.WebAssembly.Module(wasmModuleBytes)
@@ -2504,7 +2499,7 @@ ${u.length>0?`${u.join(`
 `;let n=`import * as process from 'node:process'
 import * as path from 'node:path'
 `;return e==="esm"&&(n+=`import { fileURLToPath } from 'node:url'
-const __dirname = path.dirname(fileURLToPath(import.meta.url))
+const __dirname = "DOESNOTEXIST"
 `),n}var uEt=`/**
  * This file exports various common sort, input & filter types that are not directly linked to a particular model.
  *
