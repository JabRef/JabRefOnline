name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm lint

      - name: Check types
        run: pnpm typecheck

      - name: Validate GraphQL operations
        run: pnpm validate

  test:
    name: Build & Test

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    services:
      postgres:
        image: postgres@sha256:6efd0df010dc3cb40d5e33e3ef84acecc5e73161bd3df06029ee8698e5e12c60
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jabref
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis@sha256:dbf3e4b6ad3ece9c733282ff3f16942ed754fdc4ea12332154f30a9a9b88c3af
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to port 6380 on host
          - 6380:6379

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jabref?schema=public
      GITHUB_REPO_TOKEN: ${{ secrets.GITHUBS_REPO_TOKEN }}
      NUXT_SESSION_PASSWORD: somerandompasswordNxFHaqCSPpBe6n5kRz2dru4hJ7K9bjgEtmsV8QAT3MDXcUfWGL

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Init database
        run: pnpm prisma:push

      # Check that no schema changes have been done without corresponding migration files have been added
      - name: Detect database schema drift
        run: pnpm prisma:migrate:diff $DATABASE_URL

      - name: Build
        run: pnpm build

      - name: Start server
        run: pnpm start &

      - name: Run tests
        run: pnpm run test --coverage
        env:
          TEST_URL: http://localhost:3000

      - name: Build Storybook
        run: |
          pnpm nuxi generate
          pnpm storybook:build
          cp .output/public/_storybook/external-iframe/index.html storybook-static/iframe.html
          mkdir -p storybook-static/_storybook/external-iframe
          cp -r .output/public/_nuxt storybook-static

      - name: Publish and test Storybook
        uses: chromaui/action@d7afd50124cf4f337bcd943e7f45cfa85a5e4476 # v12
        with:
          projectToken: 'b3787adf2fa5'
          # Don't wait until Chroma verified the build (for this we have the Github check)
          exitOnceUploaded: true
          storybookBuildDir: storybook-static
          debug: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
