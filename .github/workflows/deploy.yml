name: Deploy

on:
  workflow_run:
    workflows: ["Test"]
    branches: [main]
    types: [completed]

  workflow_dispatch:

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to port 6380 on host
          - 6380:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # Should be kept in sync with version configured in Azure
          node-version: 14.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Prepare artifact
        run: |
          mkdir artifact
          cp -r .output ecosystem.config.js artifact

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: server-build
          path: artifact

  deploy:
    runs-on: ubuntu-latest

    needs: build

    strategy:
      matrix:
        include:
          - environment: Test
            url: https://jabref-dev.azurewebsites.net/
          - environment: Staging
            url: https://jabref-staging.azurewebsites.net/

    name: Deploy to ${{ matrix.environment }}

    environment:
      name: ${{ matrix.environment }}
      url: ${{ matrix.url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: server-build

      - name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: JabRef
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Reset database on Azure (Test database)
        if: matrix.environment == 'Test'
        run: yarn prisma:migrate:reset --force
        env:
          DATABASE_URL: ${{ secrets.AZURE_TEST_DATABASE_URL }}

      - name: Update database on Azure (Production database)
        if: matrix.environment == 'Staging'
        run: yarn prisma:migrate:deploy
        env:
          DATABASE_URL: ${{ secrets.AZURE_DATABASE_URL }}

  deploy-prod:
    name: Deploy to Production

    runs-on: ubuntu-latest

    needs: deploy

    environment:
      name: Production
      url: https://jabref.azurewebsites.net/

    steps:
      - name: Login to Azure
        uses: Azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Swap staging and production deployment slots
        run: az webapp deployment slot swap -g JabRefOnline -n JabRef --slot staging --target-slot production

